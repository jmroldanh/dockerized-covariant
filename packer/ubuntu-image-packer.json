{
  "variables": {
    "aws_access_key": "",
    "aws_secret_key": ""
  },
  "builders": [{
    "type": "amazon-ebs",
    "access_key": "{{user `aws_access_key`}}",
    "secret_key": "{{user `aws_secret_key`}}",
    "region": "eu-west-3",
    "source_ami_filter": {
      "filters": {
        "virtualization-type": "hvm",
        "name": "ubuntu/images/*ubuntu-xenial-16.04-amd64-server-*",
        "root-device-type": "ebs"
      },
      "owners": ["099720109477"],
      "most_recent": true
    },
    "instance_type": "t2.micro",
    "ssh_username": "ubuntu",
    "ami_name": "packer-example {{timestamp}}"
  }],
  "provisioners": [
    {
      "type": "file",
      "source": "./nginx.default",
      "destination": "/tmp/nginx.conf"
    },
    {
      "type": "shell",
      "inline":[
         "sleep 30",
         "sudo apt update",
         "sudo apt-get install -y nginx",
         "sudo cp /tmp/nginx.conf /etc/nginx/sites-available/default",
         "sudo systemctl restart nginx",
         "sudo apt-get install -y docker.io",
         "sudo usermod -G docker ubuntu",
         "sudo systemctl start docker",
         "sg docker -c 'docker run hello-world'",
         "mkdir ~/docker"
        ]
    },
    {
      "type": "file",
      "source": "../docker/Dockerfile",
      "destination": "~/docker/Dockerfile"
    },
    {
      "type": "file",
      "source": "../docker/requirements.txt",
      "destination": "~/docker/requirements.txt"
    },
    {
      "type": "file",
      "source": "../docker/main.py",
      "destination": "~/docker/main.py"
    },
    {
      "type": "file",
      "source": "../docker/main.ini",
      "destination": "~/docker/main.ini"
    },
    {
      "type": "shell",
      "inline":[
         "sg docker -c 'docker build -t covariant:latest ~/docker'"
        ]
     },
     {
       "type": "file",
       "source": "./systemd_docker-covariant.service",
       "destination": "~/systemd_docker-covariant.service"
     },
     {
       "type": "shell",
       "inline":[
          "sudo cp /home/ubuntu/systemd_docker-covariant.service /etc/systemd/system/docker-covariant.service",
          "sudo systemctl daemon-reload",
          "sudo systemctl enable docker-covariant.service",
         ]
      }
   ]
}
